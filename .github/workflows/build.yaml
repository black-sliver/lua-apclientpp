name: Build

on: workflow_dispatch

jobs:

  build-msys2:

    strategy:
      # NOTE: setting up msys takes longer than building, so we don't matrix the lua versions
      # TODO: use sub-action to make this cleaner
      matrix:
        sys:
          - clang32
          - clang64
          - mingw32
          - mingw64
          - ucrt64
        lua:
          - 5.1
          - 5.2
          - 5.3
          - 5.4

    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    env:
      DEFAULT_LUA: 5.4

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set ENV
        shell: bash
        run: |
          export LUA_NUMBER=`echo ${{matrix.lua}} | sed 's/\.//'`
          echo "LUA_NAME=lua$LUA_NUMBER" >> $GITHUB_ENV
          echo "LUA_VERSION=lua${{matrix.lua}}" >> $GITHUB_ENV

      - name: Set env (PKG, versioned lua)
        if: |
          matrix.lua != env.DEFAULT_LUA &&
          matrix.lua != '5.2'
        shell: bash
        run: |
          echo "LUA_PKG=${{env.LUA_NAME}}:p" >> $GITHUB_ENV

      - name: Set env (PKG, default lua)
        if: ${{ matrix.lua == env.DEFAULT_LUA }}
        shell: bash
        run: |
          echo "LUA_PKG=lua:p" >> $GITHUB_ENV

      - name: Install MSYS ${{matrix.sys}} + gcc
        if: ${{ !startsWith(matrix.sys, 'clang') }}
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          # update: true
          pacboy: openssl:p pkg-config:p gcc:p binutils:p wget:p make:p ${{env.LUA_PKG}}

      - name: Install MSYS ${{matrix.sys}} + clang + gcc-wrapper
        if: ${{ startsWith(matrix.sys, 'clang') }}
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          # update: true
          pacboy: openssl:p pkg-config:p gcc-compat:p wget:p make:p ${{env.LUA_PKG}}

      - name: Install lua52
        if: |
          matrix.lua == '5.2'
        env:
          FULL_NAME: lua-5.2.4
        run: |
          wget https://www.lua.org/ftp/${{env.FULL_NAME}}.tar.gz
          tar -xzvf ${{env.FULL_NAME}}.tar.gz
          cd ${{env.FULL_NAME}}
          mingw32-make mingw -j3 INSTALL_TOP=/${{matrix.sys}}
          mingw32-make install INSTALL_TOP=/${{matrix.sys}}
          cp src/${{env.LUA_NAME}}.dll /${{matrix.sys}}/bin/
          mingw32-make pc INSTALL_TOP=/${{matrix.sys}} > /${{matrix.sys}}/lib/pkgconfig/lua5.2.pc
          echo "Name: Lua" >> /${{matrix.sys}}/lib/pkgconfig/lua5.2.pc
          echo "Description: An Extensible Extension Language" >> /${{matrix.sys}}/lib/pkgconfig/lua5.2.pc
          echo "Version: ${{matrix.lua}}" >> /${{matrix.sys}}/lib/pkgconfig/lua5.2.pc
          echo "Requires:" >> /${{matrix.sys}}/lib/pkgconfig/lua5.2.pc
          echo "Libs: -L/${{matrix.sys}}/bin/ -l${{env.LUA_NAME}} -lm" >> /${{matrix.sys}}/lib/pkgconfig/lua5.2.pc
          echo "Cflags: -I\${includedir}" >> /${{matrix.sys}}/lib/pkgconfig/lua5.2.pc
          pkg-config --cflags --libs ${{env.LUA_VERSION}}  # test
          cd ..

      - name: Build ${{env.LUA_NAME}}-dynamic
        run: |
          rm -f *.dll
          ./build_posix.sh ${{env.LUA_VERSION}}

      - name: Store ${{env.LUA_NAME}}-dynamic
        uses: actions/upload-artifact@v3
        with:
          name: lua-apclientpp-${{env.LUA_NAME}}-${{matrix.sys}}-dynamic
          path: lua-apclientpp.dll

      - name: Rename liblua.a -> lib${{env.LUA_NAME}}.a
        if: |
          matrix.lua == '5.2'
        run: |
          cp /${{matrix.sys}}/lib/liblua.a /${{matrix.sys}}/lib/lib${{env.LUA_NAME}}.a

      - name: Build ${{env.LUA_NAME}}-static
        run: |
          rm -f *.dll
          ./build_posix.sh ${{env.LUA_VERSION}} static

      - name: Store ${{env.LUA_NAME}}-static
        uses: actions/upload-artifact@v3
        with:
          name: lua-apclientpp-${{env.LUA_NAME}}-${{matrix.sys}}-static
          path: lua-apclientpp.dll


  relink:
    needs: build-msys2
    runs-on: ubuntu-latest

    steps:
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade machomachomangler mingw_ldd

      - name: Load lua53-clang32-dynamic
        uses: actions/download-artifact@v3
        with:
          name: lua-apclientpp-lua53-clang32-dynamic

      - name: Patch 5.3 -> 5.3.3r
        run: |
          mv lua-apclientpp.dll _lua-apclientpp.dll
          python -m machomachomangler.cmd.redll _lua-apclientpp.dll lua-apclientpp.dll lua53.dll Lua5.3.3r.dll
          python -m mingw_ldd lua-apclientpp.dll --dll-lookup-dirs . | grep lua

      - name: Store lua533r-clang32-dynamic
        uses: actions/upload-artifact@v3
        with:
          name: lua-apclientpp-lua533r-clang32-dynamic
          path: lua-apclientpp.dll


  license-copy-paste:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Copy Pasta
        run: |
          cat LICENSE > lua-apclientpp-license.txt
          echo -e "\n\n# apclientpp\n" >> lua-apclientpp-license.txt
          cat subprojects/apclientpp/LICENSE >> lua-apclientpp-license.txt
          echo -e "\n\n# asio\n"
          cat subprojects/asio/COPYING >> lua-apclientpp-license.txt
          echo -e "\n\n# json\n"
          cat subprojects/json/LICENSE.MIT >> lua-apclientpp-license.txt
          echo -e "\n\n# valijson\n"
          cat subprojects/valijson/LICENSE >> lua-apclientpp-license.txt
          echo -e "\n\n# websocketpp\n"
          cat subprojects/websocketpp/websocketpp/COPYING >> lua-apclientpp-license.txt
          echo -e "\n\n# wswrap\n"
          cat subprojects/wswrap/LICENSE >> lua-apclientpp-license.txt

      - name: Store
        uses: actions/upload-artifact@v3
        with:
          name: lua-apclientpp-license
          path: lua-apclientpp-license.txt
