name: Build

on: workflow_dispatch

jobs:

  build-ucrt64:

    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install MSYS UCRT
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          # update: true
          install: mingw-w64-ucrt-x86_64-gcc mingw-w64-ucrt-x86_64-lua53 mingw-w64-ucrt-x86_64-openssl

      - name: Build
        run: |
          INCLUDE_DIRS="-I subprojects/json/include -I subprojects/valijson/include -I subprojects/wswrap/include -I subprojects/apclientpp -Isubprojects/asio/include -Isubprojects/websocketpp -I/ucrt64/include/lua5.3"
          DEFINES="-DASIO_STANDALONE -DWSWRAP_SEND_EXCEPTIONS" # not using boost
          STATIC_LIBS=" -lssl -lcrypto -llua5.3 -lz -Wno-deprecated-declarations" # linking lua static for now because the DLL might be named differently
          LIBS="-pthread -lcrypt32 -lws2_32"
          g++ -Os -std=c++17 $DEFINES $INCLUDE_DIRS -shared -o lua-apclientpp.dll -fPIC src/lua-apclientpp.cpp -Wl,-Bstatic $STATIC_LIBS -Wl,-Bdynamic $LIBS -static-libstdc++

      - name: Run
        continue-on-error: true
        run: |
          lua5.3 -E sample.lua

      - name: Store
        uses: actions/upload-artifact@v3
        with:
          name: lua-apclientpp-53-ucrt64
          path: lua-apclientpp.dll


  build-clang32-static:

    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install MSYS CLANG32
        uses: msys2/setup-msys2@v2
        with:
          msystem: CLANG32
          # update: true
          install: mingw-w64-clang-i686-gcc-compat mingw-w64-clang-i686-lua53 mingw-w64-clang-i686-openssl

      - name: Build
        run: |
          INCLUDE_DIRS="-I subprojects/json/include -I subprojects/valijson/include -I subprojects/wswrap/include -I subprojects/apclientpp -Isubprojects/asio/include -Isubprojects/websocketpp -I/clang32/include/lua5.3"
          DEFINES="-DASIO_STANDALONE -DWSWRAP_SEND_EXCEPTIONS" # not using boost
          STATIC_LIBS=" -lssl -lcrypto -llua5.3 -lz -Wno-deprecated-declarations" # linking lua static for now because the DLL might be named differently
          LIBS="-pthread -lcrypt32 -lws2_32"
          g++ -Os -std=c++17 $DEFINES $INCLUDE_DIRS -shared -o lua-apclientpp.dll -fPIC src/lua-apclientpp.cpp -Wl,-Bstatic $STATIC_LIBS -lc++ -Wl,-Bdynamic $LIBS

      - name: Run
        continue-on-error: true
        run: |
          lua5.3 -E sample.lua

      - name: Store
        uses: actions/upload-artifact@v3
        with:
          name: lua-apclientpp-53-clang32-static
          path: lua-apclientpp.dll


  build-clang32-dynamic:

    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install MSYS CLANG32
        uses: msys2/setup-msys2@v2
        with:
          msystem: CLANG32
          # update: true
          install: mingw-w64-clang-i686-gcc-compat mingw-w64-clang-i686-lua53 mingw-w64-clang-i686-openssl

      - name: Build
        run: |
          INCLUDE_DIRS="-I subprojects/json/include -I subprojects/valijson/include -I subprojects/wswrap/include -I subprojects/apclientpp -Isubprojects/asio/include -Isubprojects/websocketpp -I/clang32/include/lua5.3"
          DEFINES="-DASIO_STANDALONE -DWSWRAP_SEND_EXCEPTIONS" # not using boost
          STATIC_LIBS="-lssl -lcrypto -lz -Wno-deprecated-declarations" # linking lua static for now because the DLL might be named differently
          LIBS="-pthread -lcrypt32 -lws2_32" # " -llua5.3"
          EXTRA="-Wl,-allow-shlib-undefined"
          g++ $EXTRA -Os -std=c++17 $DEFINES $INCLUDE_DIRS -shared -o lua-apclientpp.dll -fPIC src/lua-apclientpp.cpp -Wl,-Bstatic $STATIC_LIBS -lc++ -Wl,-Bdynamic $LIBS

      - name: Run
        continue-on-error: true
        run: |
          ls /clang32/bin/
          lua5.3 -E sample.lua

      - name: Store
        uses: actions/upload-artifact@v3
        with:
          name: lua-apclientpp-53-clang32-dynamic
          path: lua-apclientpp.dll


  build-clang64:

    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install MSYS CLANG64
        uses: msys2/setup-msys2@v2
        with:
          msystem: CLANG64
          # update: true
          install: mingw-w64-clang-x86_64-gcc-compat mingw-w64-clang-x86_64-lua53 mingw-w64-clang-x86_64-openssl

      - name: Build
        run: |
          INCLUDE_DIRS="-I subprojects/json/include -I subprojects/valijson/include -I subprojects/wswrap/include -I subprojects/apclientpp -Isubprojects/asio/include -Isubprojects/websocketpp -I/clang64/include/lua5.3"
          DEFINES="-DASIO_STANDALONE -DWSWRAP_SEND_EXCEPTIONS" # not using boost
          STATIC_LIBS=" -lssl -lcrypto -llua5.3 -lz -Wno-deprecated-declarations" # linking lua static for now because the DLL might be named differently
          LIBS="-pthread -lcrypt32 -lws2_32"
          g++ -Os -std=c++17 $DEFINES $INCLUDE_DIRS -shared -o lua-apclientpp.dll -fPIC src/lua-apclientpp.cpp -Wl,-Bstatic $STATIC_LIBS -lc++ -Wl,-Bdynamic $LIBS

      - name: Run
        continue-on-error: true
        run: |
          lua5.3 -E sample.lua

      - name: Store
        uses: actions/upload-artifact@v3
        with:
          name: lua-apclientpp-53-clang64
          path: lua-apclientpp.dll

